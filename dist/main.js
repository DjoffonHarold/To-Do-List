(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(354),r=t.n(o),a=t(314),s=t.n(a)()(r());s.push([e.id,"\n*, *::before, *::after {\n    box-sizing: border-box;\n  }\n  * {\n    margin: 0;\n  }\n  body {\n    line-height: 1.5;\n    -webkit-font-smoothing: antialiased;\n  }\n  img, picture, video, canvas, svg {\n    display: block;\n    max-width: 100%;\n  }\n  input, button, textarea, select {\n    font: inherit;\n  }\n  p, h1, h2, h3, h4, h5, h6 {\n    overflow-wrap: break-word;\n  }\n  /***************************************/\n  .container{\n    display: grid;\n    grid-template-columns: repeat(3,1fr);\n  }\n  .footer{\n    grid-column: 1/4;\n    background-color: #22c55e;\n    text-align: center;\n    \n  }\n  .main-section{\n    grid-column: 1/4;\n    background-color: #22c55e;\n    text-align: center;\n  }\n  .siderigthbar{\n    padding-left: 25px;\n    padding-top: 25px;\n    grid-column: 2/4;\n    background-color: #f0fdf4;\n  }\n  .buttonSide,\n  .buttonSideLeftBar{\n    border: none;\n    border-radius: 5px;\n    background-color: #22c55e;\n  }\n  .buttonAddTask-side,\n  .buttonAddTask{\n    border: none;\n    border-radius: 5px;\n    background-color: #22c55e;\n  }\n  .sideleftbar{\n    padding-top: 25px;\n    padding-left: 25px;\n    background-color: #e5e5e5;\n    \n  }\n  .form{\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 15px;\n  }\n  .input-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #bbf7d0;\n  }\n  .close-form-side,\n  .close-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #ef4444\n  }\n  .seclect-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #bbf7d0;\n  }\n  .tasks-list {\n    list-style-type: none;\n    padding: 0;\n    \n  }\n  .task-item {\n    border: 1px solid #fca5a5;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n  }\n  dialog[open] {\n  display: block;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-100%, -50%);\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border: none;\n  border-radius: 10px;\n  }\n  dialog {\n  /*display: none;*/\n  }\n  .taskItem{\n    gap: 15px;\n    display: flex;\n    margin-bottom: 5px;\n  }\n  .switchButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #16a34a\n  }\n  .deleteProjectButton,\n  .deleteButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #dc2626\n  }\n  .editProjectButton,\n  .editButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #16a34a\n  }\n  .projectItem:hover{\n      background-color: #9ca3af;\n      \n      \n  }\n  .projectItem{\n    margin-bottom: 5px;\n  }\n \n\n\n\n\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:";AACA;IACI,sBAAsB;EACxB;EACA;IACE,SAAS;EACX;EACA;IACE,gBAAgB;IAChB,mCAAmC;EACrC;EACA;IACE,cAAc;IACd,eAAe;EACjB;EACA;IACE,aAAa;EACf;EACA;IACE,yBAAyB;EAC3B;EACA,wCAAwC;EACxC;IACE,aAAa;IACb,oCAAoC;EACtC;EACA;IACE,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;;EAEpB;EACA;IACE,gBAAgB;IAChB,yBAAyB;IACzB,kBAAkB;EACpB;EACA;IACE,kBAAkB;IAClB,iBAAiB;IACjB,gBAAgB;IAChB,yBAAyB;EAC3B;EACA;;IAEE,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;EAC3B;EACA;;IAEE,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;EAC3B;EACA;IACE,iBAAiB;IACjB,kBAAkB;IAClB,yBAAyB;;EAE3B;EACA;IACE,aAAa;IACb,qCAAqC;IACrC,SAAS;EACX;EACA;IACE,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;EAC3B;EACA;;IAEE,YAAY;IACZ,kBAAkB;IAClB;EACF;EACA;IACE,YAAY;IACZ,kBAAkB;IAClB,yBAAyB;EAC3B;EACA;IACE,qBAAqB;IACrB,UAAU;;EAEZ;EACA;IACE,yBAAyB;IACzB,aAAa;IACb,aAAa;IACb,kBAAkB;EACpB;EACA;EACA,cAAc;EACd,eAAe;EACf,QAAQ;EACR,SAAS;EACT,iCAAiC;EACjC,uBAAuB;EACvB,aAAa;EACb,yCAAyC;EACzC,YAAY;EACZ,mBAAmB;EACnB;EACA;EACA,iBAAiB;EACjB;EACA;IACE,SAAS;IACT,aAAa;IACb,kBAAkB;EACpB;EACA;IACE,YAAY;IACZ,kBAAkB;IAClB;EACF;EACA;;IAEE,YAAY;IACZ,kBAAkB;IAClB;EACF;EACA;;IAEE,YAAY;IACZ,kBAAkB;IAClB;EACF;EACA;MACI,yBAAyB;;;EAG7B;EACA;IACE,kBAAkB;EACpB",sourcesContent:["\n*, *::before, *::after {\n    box-sizing: border-box;\n  }\n  * {\n    margin: 0;\n  }\n  body {\n    line-height: 1.5;\n    -webkit-font-smoothing: antialiased;\n  }\n  img, picture, video, canvas, svg {\n    display: block;\n    max-width: 100%;\n  }\n  input, button, textarea, select {\n    font: inherit;\n  }\n  p, h1, h2, h3, h4, h5, h6 {\n    overflow-wrap: break-word;\n  }\n  /***************************************/\n  .container{\n    display: grid;\n    grid-template-columns: repeat(3,1fr);\n  }\n  .footer{\n    grid-column: 1/4;\n    background-color: #22c55e;\n    text-align: center;\n    \n  }\n  .main-section{\n    grid-column: 1/4;\n    background-color: #22c55e;\n    text-align: center;\n  }\n  .siderigthbar{\n    padding-left: 25px;\n    padding-top: 25px;\n    grid-column: 2/4;\n    background-color: #f0fdf4;\n  }\n  .buttonSide,\n  .buttonSideLeftBar{\n    border: none;\n    border-radius: 5px;\n    background-color: #22c55e;\n  }\n  .buttonAddTask-side,\n  .buttonAddTask{\n    border: none;\n    border-radius: 5px;\n    background-color: #22c55e;\n  }\n  .sideleftbar{\n    padding-top: 25px;\n    padding-left: 25px;\n    background-color: #e5e5e5;\n    \n  }\n  .form{\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    gap: 15px;\n  }\n  .input-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #bbf7d0;\n  }\n  .close-form-side,\n  .close-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #ef4444\n  }\n  .seclect-form{\n    border: none;\n    border-radius: 5px;\n    background-color: #bbf7d0;\n  }\n  .tasks-list {\n    list-style-type: none;\n    padding: 0;\n    \n  }\n  .task-item {\n    border: 1px solid #fca5a5;\n    margin: 5px 0;\n    padding: 10px;\n    border-radius: 5px;\n  }\n  dialog[open] {\n  display: block;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-100%, -50%);\n  background-color: white;\n  padding: 20px;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  border: none;\n  border-radius: 10px;\n  }\n  dialog {\n  /*display: none;*/\n  }\n  .taskItem{\n    gap: 15px;\n    display: flex;\n    margin-bottom: 5px;\n  }\n  .switchButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #16a34a\n  }\n  .deleteProjectButton,\n  .deleteButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #dc2626\n  }\n  .editProjectButton,\n  .editButton{\n    border: none;\n    border-radius: 5px;\n    background-color: #16a34a\n  }\n  .projectItem:hover{\n      background-color: #9ca3af;\n      \n      \n  }\n  .projectItem{\n    margin-bottom: 5px;\n  }\n \n\n\n\n\n\n"],sourceRoot:""}]);const i=s},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(s[d]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);o&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},s=[],i=0;i<e.length;i++){var d=e[i],c=o.base?d[0]+o.base:d[0],l=a[c]||0,A="".concat(c," ").concat(l);a[c]=l+1;var p=t(A),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,o);o.byIndex=i,n.splice(i,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var i=t(a[s]);n[i].references--}for(var d=o(e,r),c=0;c<a.length;c++){var l=t(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=d}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),o=t(825),r=t.n(o),a=t(659),s=t.n(a),i=t(56),d=t.n(i),c=t(540),l=t.n(c),A=t(113),p=t.n(A),u=t(208),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=s().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=l(),n()(u.A,m),u.A&&u.A.locals&&u.A.locals;class C{constructor(e,n,t,o){this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.completed=!1}switchCompleted(){this.completed=!this.completed}}const g=class{constructor(){this.tasks=this.loadTasks()||[]}addTask(e,n,t,o){const r=new C(e,n,t,o);this.tasks.push(r),this.saveTasks(),this.displayTask()}editTask(e,n,t,o,r){const a=this.tasks[e];a.title=n,a.description=t,a.dueDate=o,a.priority=r,this.saveTasks(),this.displayTask()}deleteTask(e){this.tasks.splice(e,1),this.saveTasks(),this.displayTask()}switchTask(e){this.tasks[e].switchCompleted(),this.saveTasks(),this.displayTask()}saveTasks(){localStorage.setItem("taskManager",JSON.stringify(this.tasks))}loadTasks(){const e=localStorage.getItem("taskManager");return e?JSON.parse(e):null}displayTask(){const e=document.querySelector(".tasks-list");e.innerHTML=" ",this.tasks.forEach(((n,t)=>{const o=document.createElement("li");o.classList.add("taskItem");const r=document.createElement("span");r.textContent=`${n.title}`;const a=document.createElement("span");a.textContent=`${n.description}`;const s=document.createElement("span");s.textContent=`Date : ${n.dueDate}`;const i=document.createElement("span");i.textContent=`Priority : ${n.priority}`;const d=document.createElement("button");d.classList.add("switchButton"),d.textContent=n.completed?"completed":"not completed",d.style.cursor="pointer",d.style.marginLeft="10px",d.addEventListener("click",(()=>{this.switchTask(t)}));const c=document.createElement("button");c.classList.add("deleteButton"),c.textContent="delete",c.style.cursor="pointer",c.style.marginLeft="10px",c.addEventListener("click",(()=>{this.deleteTask(t)}));const l=document.createElement("button");l.classList.add("editButton"),l.textContent="edit",l.style.cursor="pointer",l.style.marginLeft="10px",l.addEventListener("click",(()=>{const e=prompt("newTitle",n.title),o=prompt("newDescription",n.description),r=prompt("newDueDate",n.dueDate),a=prompt("newPriority(high, medium, low)",n.priority);this.editTask(t,e,o,r,a)})),o.appendChild(r),o.appendChild(a),o.appendChild(s),o.appendChild(i),o.appendChild(d),o.appendChild(l),o.appendChild(c),e.appendChild(o)}))}};class f{constructor(e){this.name=e}}const b=class{constructor(){this.projects=this.loadProjects()||[]}addProject(e){const n=new f(e);this.projects.push(n),this.saveProjects(),this.displayProject()}editProject(e,n){this.projects[e].name=n,this.saveProjects(),this.displayProject()}deleteProject(e){this.projects.splice(e,1),this.saveProjects(),this.displayProject()}saveProjects(){localStorage.setItem("projectManager",JSON.stringify(this.projects))}loadProjects(){const e=localStorage.getItem("projectManager");return e?JSON.parse(e):null}displayProject(){const e=document.querySelector(".tasks-list-side");e.innerHTML=" ",this.projects.forEach(((n,t)=>{const o=document.createElement("div");o.classList.add("projectItem"),o.addEventListener("click",(()=>{const e=document.querySelector("#tasks-list");for(;e.firstChild;)e.removeChild(e.firstChild);document.createElement("div")}));const r=document.createElement("span");r.textContent=`${n.name}`;const a=document.createElement("button");a.classList.add("editProjectButton"),a.textContent="edit",a.style.cursor="pointer",a.style.marginLeft="10px",a.addEventListener("click",(()=>{const e=prompt("newName",n.name);this.editProject(t,e)}));const s=document.createElement("button");s.classList.add("deleteProjectButton"),s.textContent="delete",s.style.cursor="pointer",s.style.marginLeft="10px",s.addEventListener("click",(()=>{this.deleteProject(t)})),o.appendChild(r),o.appendChild(a),o.appendChild(s),e.appendChild(o)}))}};!function(){document.getElementById("open-dialog").addEventListener("click",(function(){document.getElementById("task-dialog").showModal()})),document.getElementById("close-dialog").addEventListener("click",(function(){document.getElementById("task-dialog").close()})),document.getElementById("open-dialog-side").addEventListener("click",(function(){document.getElementById("open-dialog-project").showModal()})),document.getElementById("close-dialog-side").addEventListener("click",(function(){document.getElementById("open-dialog-project").close()}));const e=new b;e.displayProject(),document.getElementById("task-form-side").addEventListener("submit",(function(n){n.preventDefault();const t=document.getElementById("project").value;e.addProject(t),document.getElementById("tasks-list-side").appendChild(projectItem),document.getElementById("task-form-side").reset(),document.getElementById("open-dialog-project").close()}));const n=new g;n.displayTask(),document.getElementById("task-form").addEventListener("submit",(function(e){e.preventDefault();const t=document.getElementById("title").value,o=document.getElementById("description").value,r=document.getElementById("due-date").value,a=document.getElementById("priority").value;n.addTask(t,o,r,a),document.getElementById("tasks-list").appendChild(taskItem),document.getElementById("task-form").reset(),document.getElementById("task-dialog").close()}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,